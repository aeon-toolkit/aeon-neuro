[build-system]
requires = ["setuptools>61", "wheel", "toml", "build"]
build-backend = "setuptools.build_meta"

[project]
name = "aeon-neuro"
version = "0.0.1"
description = "A package for ECG and EEG time series analysis built on the aeon toolkit."
authors = [
    {name = "aeon developers", email = "contact@aeon-toolkit.org"},
]
maintainers = [
    {name = "aeon developers", email = "contact@aeon-toolkit.org"},
]
readme = "README.md"
keywords = [
    "data-science",
    "machine-learning",
    "time-series",
    "time-series-analysis",
    "neuroscience",
    "ECG",
    "EEG",
]
classifiers = [
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Development Status :: 5 - Production/Stable",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8,<3.13"
dependencies = [
    "aeon<0.10.0",
    "mne",
    "pyprep",
]

[project.optional-dependencies]
all_extras = [
    "aeon[all_extras]",
]
dev = [
    "aeon[dev]",
]
binder = [
    "aeon[binder]",
]
docs = [
    "aeon[docs]",
]

[project.urls]
Homepage = "https://www.aeon-toolkit.org"
Repository = "https://github.com/aeon-toolkit/aeon-neuro"
Download = "https://pypi.org/project/aeon-neuro/#files"

[project.license]
file = "LICENSE"

[tool.setuptools]
zip-safe = true

[tool.setuptools.package-data]
aeon_neuro = [
    "*.csv",
    "*.csv.gz",
    "*.arff",
    "*.arff.gz",
    "*.txt",
    "*.ts",
    "*.tsv",
]

[tool.setuptools.packages.find]
exclude = ["tests", "tests.*"]

[tool.check-manifest]
ignore = [
    # Ignore virtual environments in local builds
    "venv/**",
    # Ignore the docs symlink and its contents
    "docs/examples",
    "docs/examples/**",
]

[tool.ruff.lint]
select = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.pytest.ini_options]
# ignore certain folders and pytest warnings
testpaths = "aeon_neuro"
addopts = '''
    --doctest-modules
    --durations 20
    --timeout 600
    --showlocals
    --numprocesses logical
    --dist worksteal
    --reruns 2
    --only-rerun "crashed while running"
'''
filterwarnings = '''
    ignore::UserWarning
    ignore:numpy.dtype size changed
    ignore:numpy.ufunc size changed
'''
